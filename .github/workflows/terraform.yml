name: 'Terraform'

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Setup terraform
      run: make bin/terraform

    - name: Run tests
      run: make test

    - name: Populate GCP RO secret
      run: echo "$TERRAFORM_GCP_RO" > /tmp/terraform-ro.json
      env:
        TERRAFORM_GCP_RO: ${{secrets.TERRAFORM_GCP_RO}}

    - name: Terraform plan
      # This grep is here so that the output is slimmed down to only show changes
      # and not all the refreshing of resource or initialization of things
      run: make plan | grep --color=never -E '(^.*[#~+-] .*|^[[:punct:]]|Plan|No changes)' | tee /tmp/terraform-plan-output
      env:
        GOOGLE_APPLICATION_CREDENTIALS: '/tmp/terraform-ro.json'

    - name: Comment plan on pull request
      if: github.ref != 'refs/heads/master'
      uses: actions/github-script@v3
      with:
        script: |
          const { promises: fs } = require('fs')
          // Read in terraform plan content from the previous step so that it
          // can be put into a pull request comment
          const content = await fs.readFile('/tmp/terraform-plan-output', 'utf8')

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: content,
          })

    - name: Populate GCP RW secret
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: echo "$TERRAFORM_GCP_RW" > /tmp/terraform-rw.json
      env:
        TERRAFORM_GCP_RW: ${{secrets.TERRAFORM_GCP_RW}}

    # On push to master, apply terraform changes
    - name: Terraform apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: make force-apply
      env:
        GOOGLE_APPLICATION_CREDENTIALS: '/tmp/terraform-rw.json'
